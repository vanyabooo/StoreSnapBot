import time
import sqlite3
import json
import argparse
from datetime import datetime, timedelta, timezone
from stores.rustore import get_version_rustore
from stores.appstore import get_version_appstore
from stores.googleplay import get_version_googleplay
from stores.appgallery import get_version_appgallery
from telegram_utils import send_telegram_notification


def get_db_connection():
    """
    –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite.
    """
    return sqlite3.connect("store_snap.db")


def get_user_data(user_id=None):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
    –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω user_id, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    conn = get_db_connection()
    cursor = conn.cursor()

    if user_id:
        cursor.execute(
            "SELECT user_id, appstore_url, rustore_url, googleplay_url, appgallery_url, interval, last_monitoring, next_monitoring "
            "FROM users WHERE user_id = ?", (user_id,)
        )
    else:
        cursor.execute(
            "SELECT user_id, appstore_url, rustore_url, googleplay_url, appgallery_url, interval, last_monitoring, next_monitoring "
            "FROM users"
        )

    users = cursor.fetchall()
    conn.close()
    return users


def get_current_time(offset_hours=0):
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Å —É—á–µ—Ç–æ–º —Å–º–µ—â–µ–Ω–∏—è –≤ —á–∞—Å–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é +3 —á–∞—Å–∞).
    """
    return (datetime.now(timezone.utc) + timedelta(hours=offset_hours)).strftime("%Y-%m-%d %H:%M:%S")


def process_user_monitoring(user_id, config):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user = get_user_data(user_id=user_id)[0]  # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    user_id, appstore_url, rustore_url, googleplay_url, appgallery_url, interval, last_monitoring, next_monitoring = user

    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω —Å—Ç–æ—Ä –Ω–µ —É–∫–∞–∑–∞–Ω
    if not any([appstore_url, rustore_url, googleplay_url, appgallery_url]):
        send_telegram_notification(
            config["telegram_bot_token"],
            user_id,
            "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ :("
        )
        return

    # –°–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ–º –º–∞–≥–∞–∑–∏–Ω—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤–µ—Ä—Å–∏–π
    stores = {
        "AppStore": (appstore_url, get_version_appstore),
        "RuStore": (rustore_url, get_version_rustore),
        "GooglePlay": (googleplay_url, get_version_googleplay),
        "AppGallery": (appgallery_url, get_version_appgallery),
    }

    # –•—Ä–∞–Ω–∏–º —Ç–µ–∫—É—â–∏–µ –≤–µ—Ä—Å–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_versions = {}

    while True:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        execution_time_str = get_current_time(offset_hours=3)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—É–ø–∏–ª–æ –ª–∏ –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        if next_monitoring and execution_time_str < next_monitoring:
            time.sleep(10)  # –ñ–¥–µ–º, –µ—Å–ª–∏ –≤—Ä–µ–º—è –Ω–µ –Ω–∞—Å—Ç—É–ø–∏–ª–æ
            continue

        # –í—ã–ø–æ–ª–Ω—è–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞
        for store_name, (store_url, get_version_func) in stores.items():
            if not store_url:
                continue

            try:
                # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –≤–µ—Ä—Å–∏—è—Ö –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö
                if store_name == "AppGallery":
                    new_version, last_updated, changelog = get_version_func(store_url)
                else:
                    new_version, changelog, last_updated = get_version_func(store_url)

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–±–Ω–æ–≤–∏–ª–∞—Å—å –ª–∏ –≤–µ—Ä—Å–∏—è
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–±–Ω–æ–≤–∏–ª–∞—Å—å –ª–∏ –≤–µ—Ä—Å–∏—è
                if store_name not in current_versions:
                    # –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ ‚Äî –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è
                    current_versions[store_name] = new_version
                    send_telegram_notification(
                        config["telegram_bot_token"],
                        user_id,
                        f"üéâ –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –≤ {store_name}!\n"
                        f"–í–µ—Ä—Å–∏—è: {new_version}\n"
                        f"–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {last_updated}\n"
                        f"–ò–∑–º–µ–Ω–µ–Ω–∏—è:\n{changelog}"
                    )
                    print(
                        f"–í—ã–ø–æ–ª–Ω–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –≤ {get_current_time(offset_hours=3)}. "
                        f"–ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ ‚Äî –≤–µ—Ä—Å–∏—è –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ."
                    )
                else:
                    # –í—Å–µ–≥–¥–∞ –≤—ã–≤–æ–¥–∏–º –ª–æ–≥ ‚Äî –æ–±–Ω–æ–≤–∏–ª–∞—Å—å –ª–∏ –≤–µ—Ä—Å–∏—è –∏–ª–∏ –Ω–µ—Ç
                    if current_versions[store_name] != new_version:
                        # –ù–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è
                        current_versions[store_name] = new_version
                        send_telegram_notification(
                            config["telegram_bot_token"],
                            user_id,
                            f"üéâ –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –≤ {store_name}!\n"
                            f"–í–µ—Ä—Å–∏—è: {new_version}\n"
                            f"–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {last_updated}\n"
                            f"–ò–∑–º–µ–Ω–µ–Ω–∏—è:\n{changelog}"
                        )
                        print(
                            f"–í—ã–ø–æ–ª–Ω–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –≤ {get_current_time(offset_hours=3)}. "
                            f"–ù–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è, —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ."
                        )
                    else:
                        # –í–µ—Ä—Å–∏—è –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å
                        print(
                            f"–í—ã–ø–æ–ª–Ω–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –≤ {get_current_time(offset_hours=3)}. "
                            f"–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ."
                        )

            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {store_name} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")

        # –û–±–Ω–æ–≤–ª—è–µ–º last_monitoring –∏ next_monitoring –≤ UTC
        conn = get_db_connection()
        cursor = conn.cursor()
        cursor.execute(
            f"""
            UPDATE users 
            SET last_monitoring = ?, 
                next_monitoring = datetime('now', '+{interval} minutes', '+3 hours')
            WHERE user_id = ?
            """,
            (execution_time_str, user_id)
        )
        conn.commit()
        conn.close()

        time.sleep(interval * 60)  # –ñ–¥–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ü–∏–∫–ª–æ–º


if __name__ == "__main__":
    with open("config.json", "r") as file:
        config = json.load(file)  # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

    try:
        # –ü–æ–ª—É—á–∞–µ–º user_id –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
        parser = argparse.ArgumentParser()
        parser.add_argument("--user_id", type=int, required=True, help="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
        args = parser.parse_args()

        # –í—ã–ø–æ–ª–Ω—è–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        process_user_monitoring(args.user_id, config)

    except KeyboardInterrupt:
        print("\n–°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")