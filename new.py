import subprocess
import sys
import os
import threading
import json
import time
import sqlite3
from telebot import TeleBot, types
from datetime import datetime, timezone
from stores.rustore import get_version_rustore
from stores.appstore import get_version_appstore
from stores.googleplay import get_version_googleplay
from stores.appgallery import get_version_appgallery

# –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
with open("config.json", "r") as file:
    config = json.load(file)

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ Telegram-–±–æ—Ç–∞
bot = TeleBot(config["telegram_bot_token"])

# –ü—É—Ç—å –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –±–æ—Ç—É
BOT_SCRIPT = "bot.py"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
bot_process = None
lock = threading.Lock()

# –°–ª–æ–≤–∞—Ä–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
user_sessions = {}
check_sessions = {}


def get_db_connection():
    """
    –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite.
    """
    return sqlite3.connect("store_snap.db")


def main_menu_keyboard():
    """
    –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ Reply Keyboard.
    """
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.row(
        types.KeyboardButton("–ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"),
        types.KeyboardButton("–†–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
    )
    keyboard.row(
        types.KeyboardButton("–û—Ç–∑—ã–≤—ã"),
        types.KeyboardButton("–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ")
    )
    keyboard.row(
        types.KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
        types.KeyboardButton("–û –ø—Ä–æ–µ–∫—Ç–µ")
    )
    return keyboard


def stop_monitoring_keyboard():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥".
    """
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(types.KeyboardButton("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"))
    return keyboard


def stop_check_keyboard():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É".
    """
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(types.KeyboardButton("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É"))
    return keyboard


def back_keyboard():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "‚è™ –ù–∞–∑–∞–¥".
    """
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(types.KeyboardButton("‚è™ –ù–∞–∑–∞–¥"))
    return keyboard


def back_to_main_menu_keyboard():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é".
    """
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(types.KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"))
    return keyboard


def only_back_keyboard():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "‚è™ –ù–∞–∑–∞–¥".
    """
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(types.KeyboardButton("‚è™ –ù–∞–∑–∞–¥"))
    return keyboard


def cancel_keyboard():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–û—Ç–º–µ–Ω–∞".
    """
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.add(types.KeyboardButton("–û—Ç–º–µ–Ω–∞"))
    return keyboard


def settings_menu_keyboard():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ú–∞–≥–∞–∑–∏–Ω—ã", "–ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π" –∏ "‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é".
    """
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.row(types.KeyboardButton("–ú–∞–≥–∞–∑–∏–Ω—ã"), types.KeyboardButton("–ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"))
    keyboard.add(types.KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"))  # –û–±–Ω–æ–≤–ª–µ–Ω–æ
    return keyboard


def has_stores(user_id):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É–∫–∞–∑–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Å—Ç–æ—Ä.
    """
    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute(
        "SELECT appstore_url, rustore_url, googleplay_url, appgallery_url FROM users WHERE user_id = ?",
        (user_id,)
    )
    user_stores = cursor.fetchone()
    conn.close()

    return user_stores and any(store is not None and store.strip() != "" for store in user_stores)


def app_selection_keyboard():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ç–æ—Ä–æ–≤ –∏ –∫–Ω–æ–ø–∫–æ–π "‚è™ –ù–∞–∑–∞–¥".
    """
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=False)
    keyboard.row(
        types.KeyboardButton("App Store"),
        types.KeyboardButton("RuStore")
    )
    keyboard.row(
        types.KeyboardButton("Google Play"),
        types.KeyboardButton("AppGallery")
    )
    keyboard.add(types.KeyboardButton("‚è™ –ù–∞–∑–∞–¥"))  # –ö–Ω–æ–ø–∫–∞ "‚è™ –ù–∞–∑–∞–¥"
    return keyboard


@bot.message_handler(commands=['start'])
def start_command(message):
    """
    –ö–æ–º–∞–Ω–¥–∞ /start: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –∑–∞–ø–∏—Å–∏ –≤ –ë–î.
    """
    user_id = message.chat.id
    first_name = message.from_user.first_name or ""
    last_name = message.from_user.last_name or ""
    full_name = f"{first_name} {last_name}".strip()

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = get_db_connection()
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute("SELECT * FROM users WHERE user_id = ?", (user_id,))
    user = cursor.fetchone()

    if not user:
        # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å `full_name`
        cursor.execute(
            """
            INSERT INTO users (user_id, appstore_url, rustore_url, googleplay_url, appgallery_url, interval, full_name)
            VALUES (?, ?, ?, ?, ?, ?, ?)
            """,
            (user_id, None, None, None, None, 10, full_name)  # –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª ‚Äî 10 –º–∏–Ω—É—Ç
        )
        conn.commit()
        bot.send_message(user_id, "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –±–æ—Ç–µ!üéâ")

    else:
        # –û–±–Ω–æ–≤–ª—è–µ–º `full_name` –Ω–∞ —Å–ª—É—á–∞–π –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute(
            "UPDATE users SET full_name = ? WHERE user_id = ?",
            (full_name, user_id)
        )
        conn.commit()

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    bot.send_message(
        user_id,
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Store Snap! ‚ù§Ô∏è",
        reply_markup=main_menu_keyboard()
    )

    # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    conn.close()


def utc_to_local(utc_dt):
    """
    –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤—Ä–µ–º—è UTC –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å.
    """
    local_tz = datetime.now().astimezone().tzinfo
    return utc_dt.replace(tzinfo=timezone.utc).astimezone(local_tz)

def get_current_utc_time():
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ UTC.
    """
    return datetime.now(timezone.utc)


@bot.message_handler(commands=['check'])
def check_command(message):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /check.
    –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.
    """
    user_id = message.chat.id

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = get_db_connection()
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∫–∞–∑–∞–Ω—ã –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute(
        "SELECT appstore_url, rustore_url, googleplay_url, appgallery_url FROM users WHERE user_id = ?",
        (user_id,)
    )
    user_stores = cursor.fetchone()
    conn.close()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    if not user_stores or all(store is None or store.strip() == "" for store in user_stores):
        bot.send_message(
            user_id,
            "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ :("
        )
        return

    # –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–æ
    bot.send_message(user_id, "–ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–æ—Ä–æ–≤...‚è≥")
    try:
        results = perform_single_check(user_id)
        if not results or not results.strip():  # –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç None –∏–ª–∏ –ø—É—Å—Ç–æ–π
            bot.send_message(user_id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç–æ—Ä–∞—Ö.")
        else:
            bot.send_message(user_id, results)
    except Exception as e:
        bot.send_message(user_id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏: {str(e)}")


@bot.message_handler(func=lambda message: message.text == "–ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
def start_monitoring_handler(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥".
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É–∫–∞–∑–∞–Ω—ã –ª–∏ —Å—Ç–æ—Ä—ã –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user_id = message.chat.id

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = get_db_connection()
    cursor = conn.cursor()

    # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ –ë–î –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute(
        "SELECT appstore_url, rustore_url, googleplay_url, appgallery_url, interval FROM users WHERE user_id = ?",
        (user_id,)
    )
    user_stores = cursor.fetchone()
    conn.close()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å—Ç–æ—Ä
    if not user_stores or all(store is None or store.strip() == "" for store in user_stores[:4]):
        bot.send_message(
            user_id,
            "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ :("
        )
        return

    # –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–æ, –∑–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
    with lock:
        if user_id in user_sessions and user_sessions[user_id].poll() is None:
            bot.send_message(user_id, "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É–∂–µ –∑–∞–ø—É—â–µ–Ω!", reply_markup=stop_monitoring_keyboard())
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è subprocess —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        args = ["python3", BOT_SCRIPT, f"--user_id={user_id}"]
        try:
            process = subprocess.Popen(args)
            user_sessions[user_id] = process

            # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
            current_time = time.strftime("%Y-%m-%d %H:%M:%S")
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—É—Å—Ç–∏–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ {current_time}")

            bot.send_message(user_id, "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω! üöÄ", reply_markup=stop_monitoring_keyboard())
        except Exception as e:
            bot.send_message(user_id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {str(e)}")


@bot.message_handler(func=lambda message: message.text == "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥")
def stop_monitoring_handler(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥".
    """
    global bot_process
    with lock:
        user_id = message.chat.id
        if user_id in user_sessions and user_sessions[user_id].poll() is None:
            # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
            user_sessions[user_id].terminate()
            del user_sessions[user_id]

            # –û–±–Ω—É–ª—è–µ–º next_monitoring –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            conn = get_db_connection()
            cursor = conn.cursor()
            cursor.execute(
                "UPDATE users SET next_monitoring = NULL WHERE user_id = ?",
                (user_id,)
            )
            conn.commit()
            conn.close()

            # –õ–æ–≥–∏—Ä—É–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
            current_time = time.strftime("%Y-%m-%d %H:%M:%S")
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Å—Ç–∞–Ω–æ–≤–∏–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ {current_time}")

            bot.send_message(user_id, "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! üõë", reply_markup=main_menu_keyboard())
        else:
            bot.send_message(user_id, "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ –∑–∞–ø—É—â–µ–Ω", reply_markup=main_menu_keyboard())


@bot.message_handler(func=lambda message: message.text == "–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
def bot_settings_handler(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏".
    –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫.
    """
    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å ‚öôÔ∏è",
        reply_markup=settings_menu_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    )


@bot.message_handler(func=lambda message: message.text == "–ú–∞–≥–∞–∑–∏–Ω—ã")
def set_app_button_handler(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ú–∞–≥–∞–∑–∏–Ω—ã".
    –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ –≤—ã–±–æ—Ä—É —Å—Ç–æ—Ä–∞.
    """
    bot.send_message(
        message.chat.id,
        "–î–æ–±–∞–≤—å—Ç–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π üõçÔ∏è",
        reply_markup=app_selection_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "‚è™ –ù–∞–∑–∞–¥"
    )


@bot.message_handler(func=lambda message: message.text in ["App Store", "RuStore", "Google Play", "AppGallery", "–û—Ç–º–µ–Ω–∞"])
def store_selection_handler(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—Ç–æ—Ä–∞ –∏–ª–∏ –≤—ã—Ö–æ–¥–∞ –∏–∑ –º–µ–Ω—é.
    """
    if message.text == "–û—Ç–º–µ–Ω–∞":
        bot.send_message(
            message.chat.id,
            "–î–æ–±–∞–≤—å—Ç–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π üõçÔ∏è",
            reply_markup=app_selection_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤
        )
        # –£–±–∏—Ä–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ user_sessions, –µ—Å–ª–∏ –µ—Å—Ç—å
        if message.chat.id in user_sessions:
            del user_sessions[message.chat.id]
        return

    store_mapping = {
        "App Store": "appstore",
        "RuStore": "rustore",
        "Google Play": "googleplay",
        "AppGallery": "appgallery"
    }
    selected_store = store_mapping[message.text]

    user_sessions[message.chat.id] = {"store": selected_store}

    bot.send_message(
        message.chat.id,
        f"–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –¥–ª—è {message.text}",
        reply_markup=cancel_keyboard()
    )


@bot.message_handler(func=lambda message: message.chat.id in user_sessions and "store" in user_sessions[message.chat.id])
def set_app_link_handler(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ —Å—Å—ã–ª–∫–∏ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç–æ—Ä–∞.
    """
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç "‚è™ –ù–∞–∑–∞–¥", –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
    if message.text == "‚è™ –ù–∞–∑–∞–¥":
        bot.send_message(
            message.chat.id,
            "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å ‚öôÔ∏è",
            reply_markup=settings_menu_keyboard()
        )
        # –£–±–∏—Ä–∞–µ–º –≤—ã–±–æ—Ä –∏–∑ —Å–µ—Å—Å–∏–∏
        del user_sessions[message.chat.id]
        return

    user_data = user_sessions[message.chat.id]
    selected_store = user_data["store"]
    store_mapping = {
        "appstore": "App Store",
        "rustore": "RuStore",
        "googleplay": "Google Play",
        "appgallery": "AppGallery"
    }

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å—Å—ã–ª–∫–∏ (–ø—Ä–∏–º–∏—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞)
    if not message.text.startswith("http"):
        bot.send_message(
            message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É, –Ω–∞—á–∏–Ω–∞—é—â—É—é—Å—è —Å 'http'"
        )
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    try:
        conn = get_db_connection()
        cursor = conn.cursor()
        cursor.execute(
            f"UPDATE users SET {selected_store}_url = ? WHERE user_id = ?",
            (message.text, message.chat.id)
        )
        conn.commit()
        conn.close()

        bot.send_message(
            message.chat.id,
            f"–°—Å—ã–ª–∫–∞ –¥–ª—è {store_mapping[selected_store]} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞! üéâ",
            reply_markup=settings_menu_keyboard()
        )

        # –£–±–∏—Ä–∞–µ–º –≤—ã–±–æ—Ä –∏–∑ —Å–µ—Å—Å–∏–∏
        del user_sessions[message.chat.id]

    except Exception as e:
        bot.send_message(
            message.chat.id,
            f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏: {e}"
        )


@bot.message_handler(func=lambda message: message.text == "–ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π")
def set_interval_button_handler(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π".
    """
    bot.send_message(
        message.chat.id,
        "–£–∫–∞–∂–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –º–∏–Ω—É—Ç–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 10) ‚è±Ô∏è",
        reply_markup=only_back_keyboard()
    )
    user_sessions[message.chat.id] = {"awaiting_interval": True}


@bot.message_handler(func=lambda message: message.chat.id in user_sessions and user_sessions[message.chat.id].get("awaiting_interval"))
def set_interval_handler(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–≤–æ–¥–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
    """
    if message.text == "‚è™ –ù–∞–∑–∞–¥":
        bot.send_message(
            message.chat.id,
            "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å ‚öôÔ∏è",
            reply_markup=settings_menu_keyboard()
        )
        del user_sessions[message.chat.id]
        return

    if not message.text.isdigit():
        bot.send_message(
            message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 1440"
        )
        return

    interval = int(message.text)
    if interval < 1 or interval > 1440:
        bot.send_message(
            message.chat.id,
            "–ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 1440 –º–∏–Ω—É—Ç"
        )
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute(
        "UPDATE users SET interval = ? WHERE user_id = ?",
        (interval, message.chat.id)
    )
    conn.commit()
    conn.close()

    bot.send_message(
        message.chat.id,
        f"–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {interval} –º–∏–Ω—É—Ç",
        reply_markup=settings_menu_keyboard()
    )
    del user_sessions[message.chat.id]


@bot.message_handler(func=lambda message: message.text == "–û –ø—Ä–æ–µ–∫—Ç–µ")
def about_project_handler(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û –ø—Ä–æ–µ–∫—Ç–µ".
    """
    bot.send_message(
        message.chat.id,
        "Store Snap ‚Äî —ç—Ç–æ –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ RuStore, App Store, Google Play –∏ AppGallery üöÄ\n\n"
        "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å: @vanyabooo",
        reply_markup=back_to_main_menu_keyboard()  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
    )


@bot.message_handler(func=lambda message: message.text == "–û—Ç–∑—ã–≤—ã")
def reviews_handler(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Ç–∑—ã–≤—ã".
    –í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ —Ä–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    bot.send_message(
        message.chat.id,
        "–ï—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –Ω–µ –≤—Å–µ —Ç–∞–∫ –±—ã—Å—Ç—Ä–æ, –±—Ä–æ üõ†Ô∏è",
        reply_markup=back_to_main_menu_keyboard()
    )


@bot.message_handler(func=lambda message: message.text == "‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
def back_to_main_menu_handler(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é".
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –ª—é–±–æ–≥–æ –ø–æ–¥–º–µ–Ω—é.
    """
    bot.send_message(
        message.chat.id,
        "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=main_menu_keyboard()  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    )


@bot.message_handler(func=lambda message: message.text == "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ")
def show_guide_handler(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ".
    –í—ã–≤–æ–¥–∏—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º –∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    """
    bot.send_message(
        message.chat.id,
        guide_text,
        reply_markup=back_to_main_menu_keyboard(),  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π "‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
        parse_mode="HTML"  # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–º–æ—â—å—é HTML
    )


@bot.message_handler(func=lambda message: message.text == "‚è™ –ù–∞–∑–∞–¥")
def back_to_settings_handler(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "‚è™ –ù–∞–∑–∞–¥" –∏–∑ —Ä–∞–∑–¥–µ–ª–∞ –≤—ã–±–æ—Ä–∞ —Å—Ç–æ—Ä–∞.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–∞–∑–¥–µ–ª "–ù–∞—Å—Ç—Ä–æ–π–∫–∏".
    """
    bot.send_message(
        message.chat.id,
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å ‚öôÔ∏è",
        reply_markup=settings_menu_keyboard()  # –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"
    )


@bot.message_handler(func=lambda message: message.text == "–†–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞")
def check_stores_handler(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–†–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞".
    –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ –Ω–∏ –æ–¥–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ.
    """
    user_id = message.chat.id

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = get_db_connection()
    cursor = conn.cursor()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∫–∞–∑–∞–Ω—ã –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cursor.execute(
        "SELECT appstore_url, rustore_url, googleplay_url, appgallery_url FROM users WHERE user_id = ?",
        (user_id,)
    )
    user_stores = cursor.fetchone()
    conn.close()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    if not user_stores or all(store is None or store.strip() == "" for store in user_stores):
        bot.send_message(
            user_id,
            "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ :("
        )
        return

    # –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–æ
    bot.send_message(user_id, "–ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–æ—Ä–æ–≤...‚è≥")
    try:
        results = perform_single_check(user_id)
        if not results or not results.strip():  # –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç None –∏–ª–∏ –ø—É—Å—Ç–æ–π
            bot.send_message(user_id, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å—Ç–æ—Ä–∞—Ö.")
        else:
            bot.send_message(user_id, results)
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
            bot.send_message(user_id, "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! ‚úÖ")
    except Exception as e:
        bot.send_message(user_id, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏: {str(e)}")


@bot.message_handler(func=lambda message: message.text == "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É")
def stop_check_handler(message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É".
    """
    global check_sessions
    with lock:
        if message.chat.id in check_sessions:
            del check_sessions[message.chat.id]
            bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!üõë", reply_markup=main_menu_keyboard())
        else:
            bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä–∫–∞ —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.", reply_markup=main_menu_keyboard())


@bot.message_handler(commands=['set_app'])
def set_app_command(message):
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Å—Ç–æ—Ä–∞.
    –ü—Ä–∏–º–µ—Ä: /set_app appstore https://apps.apple.com/ru/app/example
    """
    args = message.text.split(maxsplit=2)  # –†–∞–∑–¥–µ–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ —á–∞—Å—Ç–∏

    if len(args) != 3:  # –ï—Å–ª–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
        bot.send_message(
            message.chat.id,
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å—Ç–æ—Ä –∏ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –ü—Ä–∏–º–µ—Ä:\n"
            "/set_app appstore https://apps.apple.com/ru/app/example"
        )
        return

    store_name, store_url = args[1], args[2]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–∫–∞–∑–∞–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è —Å—Ç–æ—Ä–∞
    valid_stores = ["appstore", "rustore", "googleplay", "appgallery"]
    if store_name not in valid_stores:
        bot.send_message(
            message.chat.id,
            f"–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Å—Ç–æ—Ä: {store_name}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π:\n"
            f"{', '.join(valid_stores)}"
        )
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑—É
    try:
        conn = get_db_connection()
        cursor = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        cursor.execute("SELECT * FROM users WHERE user_id = ?", (message.chat.id,))
        user = cursor.fetchone()

        if user:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Å—Ç–æ—Ä–∞
            cursor.execute(
                f"UPDATE users SET {store_name}_url = ? WHERE user_id = ?",
                (store_url, message.chat.id)
            )
        else:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ –ë–î, —Å–æ–∑–¥–∞—ë–º –∑–∞–ø–∏—Å—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Å—Ç–æ—Ä–æ–º
            cursor.execute(
                f"""
                INSERT INTO users (user_id, appstore_url, rustore_url, googleplay_url, appgallery_url, interval)
                VALUES (?, ?, ?, ?, ?, ?)
                """,
                (
                    message.chat.id,
                    store_url if store_name == "appstore" else None,
                    store_url if store_name == "rustore" else None,
                    store_url if store_name == "googleplay" else None,
                    store_url if store_name == "appgallery" else None,
                    10  # –î–µ—Ñ–æ–ª—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª ‚Äî 10 –º–∏–Ω—É—Ç
                )
            )

        conn.commit()
        bot.send_message(
            message.chat.id,
            f"–°—Ç–æ—Ä {store_name} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω! üéâ"
        )
    except Exception as e:
        bot.send_message(
            message.chat.id,
            f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}"
        )
    finally:
        conn.close()


@bot.message_handler(commands=['set_interval'])
def set_interval_command(message):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
    """
    user_id = message.chat.id
    args = message.text.split()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
    if len(args) != 2 or not args[1].isdigit():
        bot.send_message(user_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤ –º–∏–Ω—É—Ç–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä: /set_interval 10).")
        return

    interval = int(args[1])
    if interval < 1 or interval > 1440:
        bot.send_message(user_id, "–ò–Ω—Ç–µ—Ä–≤–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 1 –¥–æ 1440 –º–∏–Ω—É—Ç.")
        return

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –≤ –ë–î
    conn = sqlite3.connect("store_snap.db")
    cursor = conn.cursor()
    cursor.execute(
        "UPDATE users SET interval = ? WHERE user_id = ?",
        (interval, user_id)
    )
    conn.commit()
    conn.close()

    bot.send_message(user_id, f"–ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {interval} –º–∏–Ω—É—Ç")


def perform_single_check(chat_id):
    """
    –õ–æ–≥–∏–∫–∞ –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —Å—Ç–æ—Ä–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    try:
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        current_time = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {chat_id} –≤—ã–ø–æ–ª–Ω–∏–ª –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–æ—Ä–æ–≤ –≤ {current_time}")

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = get_db_connection()
        cursor = conn.cursor()

        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–∑ –ë–î –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute(
            "SELECT appstore_url, rustore_url, googleplay_url, appgallery_url FROM users WHERE user_id = ?",
            (chat_id,)
        )
        user_stores = cursor.fetchone()
        conn.close()

        if not user_stores or all(store is None or store.strip() == "" for store in user_stores):
            return "–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ :("

        # –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        store_functions = {
            "appstore": get_version_appstore,
            "rustore": get_version_rustore,
            "googleplay": get_version_googleplay,
            "appgallery": get_version_appgallery
        }

        store_names = ["AppStore", "RuStore", "GooglePlay", "AppGallery"]

        results = []

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ—Ä—ã —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for store_name, store_url, store_function in zip(store_names, user_stores, store_functions.values()):
            if store_url and store_url.strip():  # –ï—Å–ª–∏ —Å—Ç–æ—Ä —É–∫–∞–∑–∞–Ω
                try:
                    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤–µ—Ä—Å–∏–∏, –¥–∞—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ changelog
                    data = store_function(store_url)
                    if store_name in ["AppStore", "RuStore", "GooglePlay"]:
                        version, changelog, last_updated = data
                    elif store_name == "AppGallery":
                        version, last_updated, changelog = data

                    results.append(
                        f"üéâ {store_name}\n"
                        f"–í–µ—Ä—Å–∏—è: {version}\n"
                        f"–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {last_updated}\n"
                        f"–ò–∑–º–µ–Ω–µ–Ω–∏—è:\n{changelog}"
                    )
                except Exception as e:
                    results.append(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ {store_name}: {str(e)}")

        if not results:
            return "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–æ—Ä–∞—Ö."

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
        return "\n\n".join(results)

    except Exception as e:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏: {str(e)}"


guide_text = (
    "<b>üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º Store Snap</b>\n\n"
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Store Snap! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º —É–¥–æ–±–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∞—à–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö.\n\n"
    "<b>üöÄ –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
    "1. <b>–ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥</b>:\n"
    "   –ë–æ—Ç –Ω–∞—á–Ω–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —É–∫–∞–∑–∞–ª–∏. –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –≤–µ—Ä—Å–∏—è—Ö.\n\n"
    "2. <b>–†–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞</b>:\n"
    "   –£–∑–Ω–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –≤–∞—à–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å.\n\n"
    "3. <b>–û—Ç–∑—ã–≤—ã (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)</b>:\n"
    "   –í –±—É–¥—É—â–µ–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –Ω–æ–≤—ã–µ –æ—Ç–∑—ã–≤—ã –æ –≤–∞—à–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö.\n\n"
    "4. <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>:\n"
    "   - –î–æ–±–∞–≤—å—Ç–µ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n"
    "   - –£–∫–∞–∂–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞.\n\n"
    "5. <b>–û –ø—Ä–æ–µ–∫—Ç–µ</b>:\n"
    "   –£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –∏ —Ü–µ–ª—è—Ö –±–æ—Ç–∞.\n\n"
    "6. <b>–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ</b>:\n"
    "   –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —ç—Ç–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.\n\n"
    "---\n\n"
    "<b>‚öôÔ∏è –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –±–æ—Ç–∞:</b>\n"
    "1. <b>–î–æ–±–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</b>:\n"
    "   –í —Ä–∞–∑–¥–µ–ª–µ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ú–∞–≥–∞–∑–∏–Ω—ã</b> –≤—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω (App Store, Google Play –∏ –¥—Ä.) –∏ –≤–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n\n"
    "2. <b>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</b>:\n"
    "   –í —Ä–∞–∑–¥–µ–ª–µ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π</b> –≤—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫ —á–∞—Å—Ç–æ –±–æ—Ç –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Ä—è—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç).\n\n"
    "3. <b>–ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥</b>:\n"
    "   –ù–∞–∂–º–∏—Ç–µ <b>–ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥</b> ‚Äî –±–æ—Ç –Ω–∞—á–Ω–µ—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤–∞–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n\n"
    "4. <b>–û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥</b>:\n"
    "   –ï—Å–ª–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω, –Ω–∞–∂–º–∏—Ç–µ <b>–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥</b>.\n\n"
    "---\n\n"
    "<b>üí¨ –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:</b>\n"
    "- <b>–ö–∞–∫ —É–∑–Ω–∞—Ç—å, –µ—Å—Ç—å –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è?</b>\n"
    "  –í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞, –µ—Å–ª–∏ –≤—ã–π–¥–µ—Ç –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n\n"
    "- <b>–ú–æ–≥—É –ª–∏ —è –∏–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è?</b>\n"
    "  –î–∞, —ç—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ú–∞–≥–∞–∑–∏–Ω—ã</b>.\n\n"
    "- <b>–ö–∞–∫ –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏?</b>\n"
    "  –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π</b> –∏ —É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª.\n\n"
    "---\n\n"
    "–¢–µ–ø–µ—Ä—å –≤—ã –≥–æ—Ç–æ–≤—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Store Snap! üéâ\n"
    "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º üòä"
)

#Polling + restart
def restart_bot():
    print("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    os.execv(sys.executable, ['python'] + sys.argv)

while True:
    try:
        bot.infinity_polling(timeout=20, long_polling_timeout=30)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
        time.sleep(5)
        restart_bot()